{"ast":null,"code":"var _jsxFileName = \"/home/dima/Desktop/Hakaton/src/components/InfoSection/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button } from \"../ButtonElement\";\nimport LoadingBar from \"../LoadingBar/LoadingBar\";\nimport { InfoContainer, InfoWrapper, InfoRow, Column1, Column2, TextWrapper, TopLine, Heading, Subtitle, BtnWrap, ImgWrap, Img } from \"./infoElements\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction InfoSection({\n  lightBg,\n  id,\n  imgStart,\n  topLine,\n  lightText,\n  headline,\n  darkText,\n  description,\n  buttonLabel,\n  img,\n  alt,\n  primary,\n  dark,\n  dark2\n}) {\n  _s();\n\n  const [barPercentage, setbarPercentage] = useState(2350);\n  useEffect(() => {}, [barPercentage]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(InfoContainer, {\n      lightBg: lightBg,\n      id: id,\n      children: /*#__PURE__*/_jsxDEV(InfoWrapper, {\n        children: /*#__PURE__*/_jsxDEV(InfoRow, {\n          imgStart: imgStart,\n          children: [/*#__PURE__*/_jsxDEV(Column1, {\n            children: /*#__PURE__*/_jsxDEV(TextWrapper, {\n              children: [/*#__PURE__*/_jsxDEV(TopLine, {\n                children: topLine\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Heading, {\n                lightText: lightText,\n                children: headline\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Subtitle, {\n                darkText: darkText,\n                children: description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(BtnWrap, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  to: \"home\",\n                  smooth: true,\n                  duration: 500,\n                  spy: true,\n                  exact: \"true\",\n                  primary: primary ? 1 : 0,\n                  dark: dark ? 1 : 0,\n                  dark2: dark2 ? 1 : 0,\n                  children: buttonLabel\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Column2, {\n            children: /*#__PURE__*/_jsxDEV(ImgWrap, {\n              children: /*#__PURE__*/_jsxDEV(Img, {\n                src: img,\n                alt: alt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(InfoSection, \"UdZbXQ+2qT3GL5AdAmEK1KjDgoI=\");\n\n_c = InfoSection;\nexport default InfoSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoSection\");","map":{"version":3,"sources":["/home/dima/Desktop/Hakaton/src/components/InfoSection/index.js"],"names":["React","useState","useEffect","Button","LoadingBar","InfoContainer","InfoWrapper","InfoRow","Column1","Column2","TextWrapper","TopLine","Heading","Subtitle","BtnWrap","ImgWrap","Img","InfoSection","lightBg","id","imgStart","topLine","lightText","headline","darkText","description","buttonLabel","img","alt","primary","dark","dark2","barPercentage","setbarPercentage"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SACEC,aADF,EAEEC,WAFF,EAGEC,OAHF,EAIEC,OAJF,EAKEC,OALF,EAMEC,WANF,EAOEC,OAPF,EAQEC,OARF,EASEC,QATF,EAUEC,OAVF,EAWEC,OAXF,EAYEC,GAZF,QAaO,gBAbP;;;;AAeA,SAASC,WAAT,CAAqB;AACnBC,EAAAA,OADmB;AAEnBC,EAAAA,EAFmB;AAGnBC,EAAAA,QAHmB;AAInBC,EAAAA,OAJmB;AAKnBC,EAAAA,SALmB;AAMnBC,EAAAA,QANmB;AAOnBC,EAAAA,QAPmB;AAQnBC,EAAAA,WARmB;AASnBC,EAAAA,WATmB;AAUnBC,EAAAA,GAVmB;AAWnBC,EAAAA,GAXmB;AAYnBC,EAAAA,OAZmB;AAanBC,EAAAA,IAbmB;AAcnBC,EAAAA;AAdmB,CAArB,EAeG;AAAA;;AACD,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoChC,QAAQ,CAAC,IAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,CAAC8B,aAAD,CAAX,CAAT;AACA,sBACE;AAAA,2BACE,QAAC,aAAD;AAAe,MAAA,OAAO,EAAEd,OAAxB;AAAiC,MAAA,EAAE,EAAEC,EAArC;AAAA,6BACE,QAAC,WAAD;AAAA,+BACE,QAAC,OAAD;AAAS,UAAA,QAAQ,EAAEC,QAAnB;AAAA,kCACE,QAAC,OAAD;AAAA,mCACE,QAAC,WAAD;AAAA,sCACE,QAAC,OAAD;AAAA,0BAAUC;AAAV;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,OAAD;AAAS,gBAAA,SAAS,EAAEC,SAApB;AAAA,0BAAgCC;AAAhC;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE,QAAC,QAAD;AAAU,gBAAA,QAAQ,EAAEC,QAApB;AAAA,0BAA+BC;AAA/B;AAAA;AAAA;AAAA;AAAA,sBAHF,eAIE,QAAC,OAAD;AAAA,uCACE,QAAC,MAAD;AACE,kBAAA,EAAE,EAAC,MADL;AAEE,kBAAA,MAAM,EAAE,IAFV;AAGE,kBAAA,QAAQ,EAAE,GAHZ;AAIE,kBAAA,GAAG,EAAE,IAJP;AAKE,kBAAA,KAAK,EAAC,MALR;AAME,kBAAA,OAAO,EAAEI,OAAO,GAAG,CAAH,GAAO,CANzB;AAOE,kBAAA,IAAI,EAAEC,IAAI,GAAG,CAAH,GAAO,CAPnB;AAQE,kBAAA,KAAK,EAAEC,KAAK,GAAG,CAAH,GAAO,CARrB;AAAA,4BAUGL;AAVH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAsBE,QAAC,OAAD;AAAA,mCACE,QAAC,OAAD;AAAA,qCACE,QAAC,GAAD;AAAK,gBAAA,GAAG,EAAEC,GAAV;AAAe,gBAAA,GAAG,EAAEC;AAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAtBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAoCD;;GAvDQX,W;;KAAAA,W;AAyDT,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button } from \"../ButtonElement\";\nimport LoadingBar from \"../LoadingBar/LoadingBar\";\nimport {\n  InfoContainer,\n  InfoWrapper,\n  InfoRow,\n  Column1,\n  Column2,\n  TextWrapper,\n  TopLine,\n  Heading,\n  Subtitle,\n  BtnWrap,\n  ImgWrap,\n  Img,\n} from \"./infoElements\";\n\nfunction InfoSection({\n  lightBg,\n  id,\n  imgStart,\n  topLine,\n  lightText,\n  headline,\n  darkText,\n  description,\n  buttonLabel,\n  img,\n  alt,\n  primary,\n  dark,\n  dark2,\n}) {\n  const [barPercentage, setbarPercentage] = useState(2350);\n\n  useEffect(() => {}, [barPercentage]);\n  return (\n    <>\n      <InfoContainer lightBg={lightBg} id={id}>\n        <InfoWrapper>\n          <InfoRow imgStart={imgStart}>\n            <Column1>\n              <TextWrapper>\n                <TopLine>{topLine}</TopLine>\n                <Heading lightText={lightText}>{headline}</Heading>\n                <Subtitle darkText={darkText}>{description}</Subtitle>\n                <BtnWrap>\n                  <Button\n                    to=\"home\"\n                    smooth={true}\n                    duration={500}\n                    spy={true}\n                    exact=\"true\"\n                    primary={primary ? 1 : 0}\n                    dark={dark ? 1 : 0}\n                    dark2={dark2 ? 1 : 0}\n                  >\n                    {buttonLabel}\n                  </Button>\n                </BtnWrap>\n              </TextWrapper>\n            </Column1>\n            <Column2>\n              <ImgWrap>\n                <Img src={img} alt={alt} />\n              </ImgWrap>\n            </Column2>\n          </InfoRow>\n        </InfoWrapper>\n      </InfoContainer>\n    </>\n  );\n}\n\nexport default InfoSection;\n"]},"metadata":{},"sourceType":"module"}