{"ast":null,"code":"var _jsxFileName = \"/home/dima/Desktop/Hakaton/src/components/LoadingBar/LoadingBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./LoadingBar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoadingBar({\n  done,\n  title,\n  max_progress,\n  min_progress\n}) {\n  _s();\n\n  const [style, setStyle] = useState({});\n  const [width, setWidth] = useState();\n  setWidth(done * 100) / max_progress;\n\n  if (width > 100) {\n    setWidth(100);\n  }\n\n  setTimeout(() => {\n    const newStyle = {\n      opacity: 1,\n      width: `${width}%`\n    };\n    setStyle(newStyle);\n  }, 5);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"progress\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-done\",\n      style: style,\n      children: done\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress__first\",\n      children: min_progress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress__last\",\n      children: max_progress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoadingBar, \"k0QlI2lKXXcbc+KY/PRQp0SgTe8=\");\n\n_c = LoadingBar;\nexport default LoadingBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoadingBar\");","map":{"version":3,"sources":["/home/dima/Desktop/Hakaton/src/components/LoadingBar/LoadingBar.js"],"names":["React","useState","LoadingBar","done","title","max_progress","min_progress","style","setStyle","width","setWidth","setTimeout","newStyle","opacity"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,kBAAP;;;AAEA,SAASC,UAAT,CAAoB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,YAAf;AAA6BC,EAAAA;AAA7B,CAApB,EAAiE;AAAA;;AAC/D,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,EAAlC;AAEAS,EAAAA,QAAQ,CAACP,IAAI,GAAG,GAAR,CAAR,GAAuBE,YAAvB;;AAEA,MAAII,KAAK,GAAG,GAAZ,EAAiB;AACfC,IAAAA,QAAQ,CAAC,GAAD,CAAR;AACD;;AAEDC,EAAAA,UAAU,CAAC,MAAM;AACf,UAAMC,QAAQ,GAAG;AACfC,MAAAA,OAAO,EAAE,CADM;AAEfJ,MAAAA,KAAK,EAAG,GAAEA,KAAM;AAFD,KAAjB;AAKAD,IAAAA,QAAQ,CAACI,QAAD,CAAR;AACD,GAPS,EAOP,CAPO,CAAV;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,KAAK,EAAEL,KAAtC;AAAA,gBACGJ;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,gBAAkCG;AAAlC;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBAAiCD;AAAjC;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GA7BQH,U;;KAAAA,U;AA+BT,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./LoadingBar.css\";\n\nfunction LoadingBar({ done, title, max_progress, min_progress }) {\n  const [style, setStyle] = useState({});\n\n  const [width, setWidth] = useState();\n\n  setWidth(done * 100) / max_progress;\n\n  if (width > 100) {\n    setWidth(100);\n  }\n\n  setTimeout(() => {\n    const newStyle = {\n      opacity: 1,\n      width: `${width}%`,\n    };\n\n    setStyle(newStyle);\n  }, 5);\n\n  return (\n    <div className=\"progress\">\n      <div className=\"progress-done\" style={style}>\n        {done}\n      </div>\n      <div className=\"progress__first\">{min_progress}</div>\n      <div className=\"progress__last\">{max_progress}</div>\n    </div>\n  );\n}\n\nexport default LoadingBar;\n"]},"metadata":{},"sourceType":"module"}